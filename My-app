AWS Elastic Beanstalk me application deployment ke liye alag-alag policies hoti hain, jo batati hain ki naya version kaise deploy hoga. Default setting "All at once" hoti hai, lekin aap ise customize kar sakte hain.

Deployment Policies
All at Once – Saare instances ek sath update hote hain, par thodi der ke liye downtime ho sakta hai.
Rolling – Instances ko batches me divide karke update kiya jata hai. Puri capacity available nahi hoti, kyunki kuch instances purane version par rahenge jab tak naye instances update nahi ho jate.
Rolling with Additional Batch – Ek extra batch launch ki jati hai taaki deployment ke dauraan full capacity maintain ho. Jab deployment complete ho jata hai to extra batch terminate ho jati hai.
Immutable – Naye instances ek alag Auto Scaling group me launch hote hain. Agar naye instances health check pass nahi karte to unhe hata diya jata hai, aur purane instances as it is rehte hain.
Traffic Splitting – Canary testing ke liye use hota hai. Pehle sirf kuch traffic naye version par bheja jata hai, aur agar sab thik rahta hai to pura traffic naye version par shift kar diya jata hai. Agar naye instances fail ho jayein, to traffic wapas purane instances par bhej diya jata hai bina service interruption ke.
Deployment Configuration Options
Batch Size – Rolling deployments me ek batch me kitne instances update honge. Ye fixed number ya percentage me set kiya ja sakta hai.
Traffic Split Percentage – Traffic-splitting me kitna traffic naye version par bhejna hai.
Health Check Ignore Option – Agar application thoda degrade hone ke bawajood sahi chal rahi hai, to aap deployment rollback hone se rok sakte hain.
Command Timeout – Kitne seconds tak wait kiya jaye jab tak naye instances healthy nahi ho jate.
Rolling Deployment Working
Pehle kuch instances ko load balancer se detach kiya jata hai, naya version deploy hota hai, fir wapas attach kiya jata hai.
Agar health check pass ho jaye to agla batch update hota hai.
Agar koi batch fail ho jaye, to deployment fail ho jata hai aur purana version active rehta hai.
Traffic-Splitting Deployment Working
Ek naye Auto Scaling group me naye instances launch hote hain.
Shuru me sirf kuch percentage traffic naye instances par bheja jata hai.
Agar sab thik rahta hai to pura traffic naye version par shift hota hai, aur purane instances terminate ho jate hain.
Agar naye instances fail ho jayein to traffic wapas purane instances par shift ho jata hai bina downtime ke.
Rollback kaise hota hai?
Agar deployment fail ho jaye, to:

Aap console me "Abort current operation" ka use karke rollback kar sakte hain.
AWS CLI ya API se rollback trigger kar sakte hain.
*************
deploying a Flask application to Elastic Beanstalk
******************
The "127 loopback address" is basically an IP address jo apne computer ya device ke saath baat karne ke liye use hota hai.
Iska full form hai 127.0.0.1, aur isko "localhost" bhi kehte hain.
Jab aap 127.0.0.1 type karte ho (jaise browser mein), toh computer samajh jata hai ki " arre, yeh toh mujhe apne aap se connect karna hai
*********
Class A
Range: 0.0.0.0 se 127.255.255.255 tak
Pehla byte (8 bits): Network ke liye, baaki 24 bits hosts (devices) ke liye.
Sign: Agar IP ka pehla number 0-127 hai, toh Class A hai.
2. Class B
Range: 128.0.0.0 se 191.255.255.255 tak
Pehle do bytes (16 bits): Network ke liye, baaki 16 bits hosts ke liye.
Sign: Pehla number 128-191 hai, toh Class B.
Kaun use karta hai?: Medium size ke networks, jaise universities ya badi companies. Ek Class B network mein 65,000 tak devices aa sakte hain.
3. Class C
Range: 192.0.0.0 se 223.255.255.255 tak
Pehle teen bytes (24 bits): Network ke liye, baaki 8 bits hosts ke liye.
***
D
Range: 224.0.0.0 se 239.255.255.255 tak
Kaam: Yeh normal networks ke liye nahi hai—isko multicasting ke liye use karte hain. Matlab, ek hi message ko ek group of devices ko bhejna, jaise live streaming ya video calls.
***********
Class E
Range: 240.0.0.0 se 255.255.255.255 tak
Kaam: Yeh experimental hai—future ke research ya testing ke liye reserved hai. Aam log isko use nahi karte.
***********
IPCONFIG
Full form: Internet Protocol Configuration
Kya karta hai?: Yeh ek command hai jo Windows computers pe aapke network ki details dikhata hai. Matlab, aapka IP address, subnet mask, gateway, etc. sab pata chal jata hai
**********
PING
Kya karta hai?: Yeh ek tool hai jo check karta hai ki aapka computer kisi doosre device ya server (jaise Google) se connect ho sakta hai ya nahi
*****
VPC Create Karte Waqt:
"Enable DNS Resolution" aur "Enable DNS Hostnames" dono ko ON rakho.
DNS (Domain Name System) ek tarah ka "phonebook" hai jo domain names (jaise google.com) ko IP addresses (jaise 142.250.190.78) mein convert karta hai.
VPC mein DNS settings se yeh decide hota hai ki aapka network kaise names resolve karega—internal ya external resources ke liye.
***************
Internet Gateway ek tarah ka "darwaza" hai jo aapke Virtual Private Cloud (VPC) ko baahar ki duniya—yaani internet—se connect karta hai. 
Yeh ek bridge ka kaam karta hai jo VPC ke andar ke resources (jaise servers ya instances) 
ko internet tak le jata hai aur internet se wapas traffic laata hai.
**************************************
1. VPC Created
2. IGW Attached to VPC
3. Subnet Created
4. Route Table Created, Attached to IGW and Subnet
Destination: 0.0.0.0/0
Target: igw-xxxx (Internet Gateway ka ID)
******************************************************************************************************
Route tables ek "traffic police" ki tarah kaam karte hain VPC ke andar. Yeh decide karte hain ki traffic kahan jana chahiye—VPC ke andar hi rehna hai ya internet pe bhejna hai.
Inme rules likhe hote hain jo batate hain ki data packets ko efficiently aur securely unki manzil tak kaise pahunchana hai.
**********
Route 53 ek DNS (Domain Name System) service hai jo AWS provide karta hai. Yeh domain names (jaise example.com) ko IP addresses mein translate karta hai aur traffic ko sahi jagah route karta hai. 
Isko set up karne ke liye hum domain register karenge, hosted zone banayenge, aur records configure karenge
Step 1: AWS Account Banayein (Agar Nahi Hai)
Step 2: AWS Management Console Mein Route 53 Pe Jao
Step 3: Domain Register Karo (Ya Existing Domain Use Karo)
Agar tumhare paas domain nahi hai:
Route 53 dashboard pe "Domains" -> "Register Domain" pe click karo.
Apna pasand ka domain name daalo (jaise mywebsite.com) aur check karo available hai ya nahi.
Available ho toh "Add to cart" karo.
Contact details bharo (name, address, email, phone).
"Continue" pe click karo, terms accept karo, aur payment complete karo.
********************
Step 4: Hosted Zone Create Karo
Domain register karne ke baad, Route 53 automatically ek "Hosted Zone" banata hai. Yeh ek container hota hai jisme DNS records store hote hain.
Check karne ke liye:
Route 53 dashboard pe "Hosted Zones" pe click karo.
Tumhara domain (jaise mywebsite.com) wahan dikhega—isko select karo
**********
Step 6: DNS Records Banayein
Ab hosted zone ke andar records banane ka time hai taaki traffic route ho sake.
Hosted zone select karo aur "Create Record" pe click karo:
Record Name: Agar apex domain (jaise mywebsite.com) ke liye hai, toh blank chhodo. Subdomain ke liye (jaise www.mywebsite.com), "www" daalo.
Record Type:
A (Address) select karo agar IP address pe route karna hai.
Agar AWS resource (jaise S3 bucket ya EC2) hai, toh A ke saath "Alias" choose karo.
TTL (Time to Live): Default 300 seconds chhodo (ya adjust karo).
********
Value:
Agar IP hai (jaise 192.168.1.10), toh woh daalo.
Alias ke liye, "Alias to..." select karo aur resource choose karo (jaise EC2 instance ya S3 bucket).
"Create Record" pe click karo
*********************
Route 53 routing policies se traffic ko smartly manage kar sakte ho:
Hosted zone mein record select karo ya naya banate waqt "Routing Policy" choose karo.
Options:
Simple: Default, ek single resource pe route karta hai.
Failover: Primary aur secondary resource ke beech switch karta hai agar primary fail ho.
Latency: User ke location ke hisaab se fastest server pe bhejta hai.
Weighted: Traffic ko multiple resources mein divide karta hai (jaise 70% ek pe, 30% doosre pe).
**************

********************
Hosted Zone ek virtual container ya collection hota hai jo DNS records ko store karta hai. Yeh records batate hain ki koi specific domain name (jaise example.com) 
ya uske subdomains (jaise www.example.com, blog.example.com) ka traffic kahan route hona chahiye. Simple words mein, 
yeh ek tarah ka rulebook hai jo internet ko batata hai ki jab koi user domain name type kare,
toh usko kahan bhejna hai—kisi server pe, kisi website pe, ya kisi aur resource pe
Hosted Zone ka naam usually wahi hota hai jo domain ka naam hota hai. Jaise agar domain hai example.com, toh hosted zone bhi example.com
Website Hosting:
Tumhari website ka traffic manage karne ke liye, jaise example.com ko specific server pe point karna.
Subdomains Management:
Ek hi hosted zone mein tum subdomains (jaise blog.example.com, shop.example.com) ke liye alag-alag rules bana sakte ho

*************************************************************8
Hosted Zone ek tarah ka DNS record ka collection hota hai jo ek specific domain ke liye traffic manage karta hai. Jab tum ek
hosted zone create karte ho, toh uske liye charges apply hote hain, chahe tum kitna bhi traffic use karo ya na karo. Ab multiple hosted zones ka matlab hai multiple 
domains ya subdomains ke liye alag-alag zones, aur hosition	Hosted zone mein ek ya zyada NS records hote hain jo name servers ko point karte hain.	Hosted zone ka ek hi SOA record hota hai, jo zone ka starting point hota hai.ar zone ka alag charge lagta hai.
***********************************************************************************
Aspect	                       NS (Name Server)	                                           SOA (Start of Authority)
Definition	NS record batata hai ki yeh domain kaunsa name server use karta hai.	SOA record domain ka "authority" info deta hai, jaise admin ka contact aur zone ka metadata.
Full Form        	              Name Server	                                                              Start of Authority
position	 Hosted zone mein ek ya zyada NS records hote hain jo name servers ko point karte hain. 	Hosted zone ka ek hi SOA record hota hai, jo zone ka starting point hota hai.
Structure	Bas name server ka hostname deta hai (jaise ns-123.awsdns-45.com).	Multiple fields hote hain (jaise primary name server, admin email, serial number, etc.).
***************
Step 1: DNS Record Types Explained in HinEnglish
A Record: Ye "Address" record hota hai. Isse aap apne domain (like example.com) ko ek IPv4 address se connect karte ho. For example, agar aapka website ka server 192.0.2.1 pe hai, to A record bolega ki example.com -> 192.0.2.1.
AAAA Record: Ye bhi A jaisa hi hai, but ye IPv6 address ke liye hota hai (jo newer version hai IP ka). For example, 2001:db8::1.
CNAME Record: Ye "Canonical Name" hota hai. Isse aap ek domain ko dusre domain se link karte ho. Jaise agar aapke paas ek S3 bucket ya load balancer hai (e.g., mybucket.s3.amazonaws.com), to aap apna domain (like files.example.com) usse point kar sakte ho using CNAME.
**********
Type: CNAME
Name: files.example.com
Value: mybucket.s3.amazonaws.com (ya load balancer ka URL)
TTL: 300
**********
What is a Subdomain? (Subdomain Kya Hai?)
Pehle yeh samajh le ki subdomain kya hota hai. Agar teri main website hai, jaise example.com, toh ek subdomain uska ek chhota part hota hai jo alag se kaam karta hai, 
jaise blog.example.com ya shop.example.com.
**************
SSL Certificate: Agar tera main domain pe SSL (https) hai, toh subdomain pe bhi automatically apply ho sakta hai. Warna manually add karna padega.
**********
Agar aapko AWS mein ek subdomain create karna hai, toh aapko Route 53 ka use karna padega. Yahaan step-by-step process diya hai:
Step 1: Main Domain Check Karo
Step 2: Route 53 Mein Hosted Zone Open Karo
AWS console open karo.
Route 53 service par jao.
Hosted zones par click karo.
Apne domain ka hosted zone select karo.
Step 3: Subdomain Ke Liye New Record Banayein
Create record button pe click karo.
Record name field mein apna subdomain likho. Example:
Agar aapko app.example.com banana hai, toh Record name: app likho.
Step 3: Subdomain Ke Liye New Record Banayein
Create record button pe click karo.
Record name field mein apna subdomain likho. Example:
Agar aapko app.example.com banana hai, toh Record name: app likho.
Record type:
Agar subdomain kisi server/EC2 instance ko point kar raha hai, toh A record select karo.
Agar subdomain kisi another domain ya Load Balancer ko point kar raha hai, toh CNAME record select karo.
Step 4: Subdomain Ka Destination Set Karo
A Record ke liye:
Value mein EC2 ka public IP daalo.
Agar aapne Elastic IP assign kiya hai, toh wahi daalo.
CNAME Record ke liye:
Agar aap subdomain ko kisi Load Balancer ya existing domain pe point karna chahte ho, toh uska DNS name likho.
Example: myapp.elb.amazonaws.com
Step 5: Record Save Karo
TTL (Time To Live) default (300 seconds) rakho.
Create record pe click karo.
15-30 minutes wait karo, phir subdomain ping ya nslookup se check karo.
*******************************
 CNAME ek alias hota hai, jo doosre domain name ko point karta hai. Agar aapne root domain par CNAME lagaya, toh woh baaki records (like MX for emails) ko overwrite kar sakta hai.

Toh solution kya hai?
✅ Option 1: AWS Route 53 ALIAS Record Use Karo
AWS Route 53 allow karta hai ALIAS record, jo root domain ko directly AWS services (like Load Balancer, CloudFront, S3) se link kar sakta hai.
Example:
rust
Copy
Edit
example.com -> ALIAS -> myapp.elb.amazonaws.com
example.com -> CNAME -> myapp.example.com ❌ (Not allowed for root domain)
app.example.com -> CNAME -> myapp.example.com ✅ (Allowed)
***********
CNAME record ka matlab hota hai “alias”, yani ek domain ko doosre domain ke saath point karna

********
ALIAS record ek special AWS-specific DNS record hai, jo AWS services ke liye kaam karta hai, jaise:
CloudFront
Elastic Load Balancer (ELB)
API Gateway
S3 Static Website
Global Accelerator
Yeh CNAME jaisa hi hota hai, lekin root domain (apex domain) par bhi kaam karta hai, jo normal CNAME nahi kar sakta.
*********
AWS Alias Record Kaise Banayein?
🛠 Step-by-Step Process:
1️⃣ AWS Console Open Karo:

AWS Management Console me Route 53 service open karo.
2️⃣ Hosted Zone Me Jao:

Jis domain ka Alias Record banana hai, uska Hosted Zone open karo.
3️⃣ New Record Create Karo:

"Create Record" pe click karo.
4️⃣ Record Type Choose Karo:

Record Name: example.com
Record Type: A Record (IPv4) ya AAAA Record (IPv6)
Alias: ✅ Enable karo
Target: AWS Service select karo (like CloudFront, ELB, S3)
5️⃣ Save Karo:

Record create karne ke baad Save changes karo.
***************************************

